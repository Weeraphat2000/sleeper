###############################################################
# ใช้ base image ชื่อ node:alpine และตั้งชื่อ stage นี้ว่า development 
# โดย stage นี้จะใช้สำหรับกระบวนการพัฒนาหรือ build application
###############################################################
FROM node:alpine As development

###############################################################
# กำหนดโฟลเดอร์ทำงาน (Working Directory) ภายใน Container 
# ให้เป็น /usr/src/app
###############################################################
WORKDIR /usr/src/app

###############################################################
# คัดลอกไฟล์ package.json มาไว้ในโฟลเดอร์ทำงาน 
# รวมถึง pnpm-lock.yaml และ tsconfig.json
# ไฟล์เหล่านี้จำเป็นสำหรับติดตั้ง dependencies และตั้งค่า TypeScript
###############################################################
COPY package.json ./
COPY pnpm-lock.yaml ./
COPY tsconfig.json ./tsconfig.json
COPY nest-cli.json ./nest-cli.json

###############################################################
# ติดตั้ง pnpm ทั่วทั้งระบบ (Global) เพื่อให้ใช้ pnpm ได้จาก command line
###############################################################
RUN npm install -g pnpm

###############################################################
# คัดลอกโฟลเดอร์ apps/notifications มายัง /usr/src/app/apps/notifications
# และคัดลอกโฟลเดอร์ libs มายัง /usr/src/app/libs
# เพื่อให้โค้ดทั้งหมดพร้อมสำหรับการ build
###############################################################
COPY apps/notifications ./apps/notifications
COPY libs ./libs

###############################################################
# รันคำสั่ง pnpm install -r คือ ติดตั้ง dependencies ทั้งหมด
# -r คือ ใช้ pnpm-lock.yaml ในการติดตั้ง dependencies
###############################################################
RUN pnpm install -r

###############################################################
# เข้าไปในโฟลเดอร์ apps/notifications แล้วรันคำสั่ง pnpm install ซ้ำอีกครั้ง
# (กรณีที่ภายใน /apps/notifications มีไฟล์ package.json และ dependencies เพิ่มเติม)
###############################################################
# RUN cd apps/notifications && pnpm install

###############################################################
# รันคำสั่ง pnpm run build เพื่อ compile หรือ build โค้ด TypeScript
# ให้กลายเป็นไฟล์ JavaScript (ผลลัพธ์จะอยู่ใน dist)
###############################################################
RUN pnpm run build notifications

###############################################################
# เริ่มต้น Stage ใหม่ ชื่อ production โดยใช้ base image node:alpine
# สำหรับเอาไฟล์ที่ build เสร็จแล้วมาใช้ใน Production
###############################################################
FROM node:alpine As production

###############################################################
# กำหนดค่า ARG NODE_ENV=production และตั้งค่า ENV NODE_ENV เป็น production
###############################################################
ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}

###############################################################
# กำหนดโฟลเดอร์ทำงาน (Working Directory) ภายใน Container
# ให้เป็น /usr/src/app
###############################################################
WORKDIR /usr/src/app

###############################################################
# คัดลอกไฟล์ package.json และ pnpm-lock.yaml มาไว้ในโฟลเดอร์ทำงาน
# ไฟล์เหล่านี้จำเป็นสำหรับติดตั้ง dependencies
###############################################################
COPY package.json ./
COPY pnpm-lock.yaml ./

###############################################################
# ติดตั้ง pnpm ทั่วทั้งระบบ (Global) เพื่อให้ใช้ pnpm ได้จาก command line
###############################################################
RUN npm install -g pnpm

###############################################################
# รันคำสั่ง pnpm install --prod เพื่อดาวน์โหลดและติดตั้ง dependencies
# ที่กำหนดไว้ใน package.json โดยอ้างอิงจาก pnpm-lock.yaml
###############################################################
RUN pnpm install --prod

###############################################################
# คัดลอกโฟลเดอร์ apps/notifications มายัง /usr/src/app/apps/notifications
# และคัดลอกโฟลเดอร์ libs มายัง /usr/src/app/libs
# เพื่อให้โค้ดทั้งหมดพร้อมสำหรับการ build
###############################################################
COPY --from=development /usr/src/app/dist ./dist

###############################################################
# รันคำสั่ง pnpm install --prod เพื่อดาวน์โหลดและติดตั้ง dependencies
# ที่กำหนดไว้ใน package.json โดยอ้างอิงจาก pnpm-lock.yaml
###############################################################
CMD ["node", "dist/apps/notifications/main.js"]
